{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nexport const UseFetch = url => {\n  _s();\n  const [result, setResult] = useState(1);\n  useEffect(() => {\n    getData(url);\n  }, [url]);\n  async function getData(url) {\n    try {\n      setResult({\n        load: true,\n        data: null\n      });\n      const resp = await fetch(url);\n      const data = await resp.json();\n      setResult({\n        load: false,\n        data\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  return result;\n};\n_s(UseFetch, \"nRG4E0V/FZvhP+yZpCm3pJZvEZ8=\");\n_c = UseFetch;\nvar _c;\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"names":["React","useState","useEffect","UseFetch","url","result","setResult","getData","load","data","resp","fetch","json","e","console","log"],"sources":["/Users/jesusbarros/Documents/web_react/src/components/UseFetch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport const UseFetch = (url) => {\n  const [result, setResult] = useState(1)\n\n  useEffect(() => {\n    getData(url)\n  }, [url])\n\n  async function getData(url) {\n    try {\n      setResult({ load: true, data: null })\n      const resp = await fetch(url)\n      const data = await resp.json()\n      setResult({ load: false, data })\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  return result\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACdK,OAAO,CAACH,GAAG,CAAC;EACd,CAAC,EAAE,CAACA,GAAG,CAAC,CAAC;EAET,eAAeG,OAAO,CAACH,GAAG,EAAE;IAC1B,IAAI;MACFE,SAAS,CAAC;QAAEE,IAAI,EAAE,IAAI;QAAEC,IAAI,EAAE;MAAK,CAAC,CAAC;MACrC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACP,GAAG,CAAC;MAC7B,MAAMK,IAAI,GAAG,MAAMC,IAAI,CAACE,IAAI,EAAE;MAC9BN,SAAS,CAAC;QAAEE,IAAI,EAAE,KAAK;QAAEC;MAAK,CAAC,CAAC;IAClC,CAAC,CACD,OAAOI,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EAEA,OAAOR,MAAM;AACf,CAAC;AAAA,GApBYF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}